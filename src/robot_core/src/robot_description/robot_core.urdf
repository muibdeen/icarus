<?xml version="1.0"?>

<robot name="icarus" xmlns:xacro="http://www.ros.org/wiki/xacro">
	
	<!--constants to use for the robot dimensions-->
	<xacro:property name="chassis_length" value = ".18"/>
	<xacro:property name="chassis_width" value = ".203"/>
	<xacro:property name="chassis_height" value = ".16"/>

	<xacro:property name="wheel_radius" value = ".024"/>
	<xacro:property name="wheel_width" value = ".03"/>
	<xacro:property name="wheel_zoff" value = ".07"/>
	<xacro:property name="wheel_ygap" value = ".018"/>
	<xacro:property name="wheel_xoff" value = ".1015"/>

	<xacro:property name="support_height" value = ".203"/>
	<xacro:property name="support_radius" value = ".203"/>
    
	<!-- intertial property macros to be used for robot chassis and wheels-->
	<xacro:macro name="robot_inertia" params="m w h d">
	    <inertial>
		    <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
			<mass value="${m}"/>
			<inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) *(w*w +d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
	    </inertial>
	</xacro:macro>

	<xacro:macro name="wheel_inertia" params="m r h">
	    <inertial>
			<origin xyz="0 0 0" rpy="${pi/2} 0 0 "/>
			<mass value ="${m}"/>
			<inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy="0.0" ixz="0.0" iyy="${(m/12) *(3*r*r +h*h)}" iyz="0.0" izz="${(m/2) * (r*r)}"/> 
		</inertial>
	</xacro:macro>

<!-- defining the base of the robot-->
	<link name="base_link">
		<collision>
			<geometry>
		    	<box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
			</geometry>
	    </collision>
		<xacro:robot_inertia m="1.0" w="${chassis_width}" d="${chassis_length}" h="${chassis_height}"/>
		
		<visual>
		<geometry>
		    <box size="${chassis_length} ${chassis_width} ${chassis_height}"/>
		</geometry>
	        <material name="Cyan">
		  <color rgba="0 1.0 1.0 1.0"/>
	        </material>
	    </visual>
	</link>

	<!-- base_footprint has no visual but helps to determine where center of robot lies-->
	<!--base footprint doesnt need any collision properties since its a virtual link, doesnt exist-->
	<link name="base_footprint"/>

	<joint name="base_joint" type="fixed">
	    <parent link="base_link"/>
	    <child link="base_footprint"/>
	    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
	</joint>

	<!-- wheels -->
	<xacro:macro name="wheel" params="prefix x_reflect y_reflect">
	    <link name ="${prefix}_link">
			<collision>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
				<geometry>
					<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
				</geometry>
			</collision>

			<xacro:wheel_inertia m="1.0" r="${wheel_radius}" h="${wheel_width}"/>
					
			<visual>
				<origin xyz="0 0 0" rpy="${pi/2} 0 0 "/>
				<geometry>
					<cylinder radius="${wheel_radius}" length="${wheel_width}"/>
				</geometry>
				<material name="Gray">
					<color rgba="0.5 0.5 0.5 1.0"/>
				</material>
			</visual>
	    </link>

	    <joint name="${prefix}_joint" type="continuous">
		<parent link="base_link"/>
		<child link="${prefix}_link"/>
		<origin xyz="${x_reflect*wheel_xoff} ${y_reflect*(chassis_width/2 + wheel_ygap)} ${-wheel_zoff}" rpy="0 0 0"/>
		<axis xyz="0 1 0"/>
	    </joint>
	</xacro:macro>

	<xacro:wheel prefix="frontLeft" x_reflect="-1" y_reflect="-1"/>
	<xacro:wheel prefix="frontRight" x_reflect="-1" y_reflect="1"/>
	<xacro:wheel prefix="backLeft" x_reflect="1" y_reflect="-1"/>
	<xacro:wheel prefix="backRight" x_reflect="1" y_reflect="1"/>
</robot>

